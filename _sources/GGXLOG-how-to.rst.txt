.. _GGXLOG-how-to:

========================================
How to write a text with GenoGraphiX-LOG
========================================

In this short guide I will teach you how to write a text in the keystroke logging software GenoGraphiX-LOG. I will also give a short primer on how to prepare for the analysis of your writing session at the end of the guide.

Before I start with the guide itself, I will begin with a short introduction to what kind of software GenoGraphiX-LOG is and why you might want to use it. Go to the section `How to start writing`_ if you want to go straight into how to use the program.

.. contents::

What is GenoGraphiX-LOG?
========================

GenoGraphiX-LOG (abbreviated GGXLog) is a program that records the keys you press on your keyboard while writing—what is called *keystroke logging*. You might be familiar with keyloggers as malicious software used to steal confidential information. A hacker might use a covertly installed keylogger on a victims computer to steal their login information. This is *not* what GGXLog is used for nor can it be used in that way.

The keystroke logging software GGXLog is primarily used for writing research. It is the software I used to investigate :ref:`the writing processes of high school students <first_year_masters_thesis>` when taking a language test, as well as when I explored :ref:`how academics used AI-assistance <second_year_masters_thesis>` to write short academic texts.

GGXLog records each keystroke that is pressed when writing in the program, and then compiles and stores the data into files with a tab-separated value (.tsv) format. As an example, here is the log for "GGXLog records each keystroke" from the previous sentence in a spreadsheet:

.. csv-table::
   :file: table_output.csv
   :header-rows: 1
   :class: small-table

The sheer amount of data that keystroke logging provides from writing a very short sentence becomes clear in this example. However, GGXLog also offers several features for analysis because of the inaccessible format of the log. Furthermore, the log can also be loaded into statistical software.

Why use a keystroke logger?
---------------------------

Beyond recording *what* key you press on the keyboard, it also records *when* you press the key. This gives you the pause length between each character, word, sentence, and paragraph of your text. The length of the pause as well as where the pause occurs can tell you a lot about writing processes:

* Longer pauses between characters can indicate spelling difficulties (orthographic processing),

* Longer pauses between words can indicate struggling to think of a word (lexical retrieval),

* Longer pauses between sentences can indicate planning of the next sentence or evaluation of the previous sentence (higher-order processing),

* Longer pauses between paragraphs can indicate organizing the overall text (also higher-order processing).

These processes are *cognitive*—that is, they indicate some mental activity. For cognitive processes, we typically look for pauses above 2 seconds, what is called a *cognitive pause*. So a pause above 2 seconds within a word might be indicative of spelling difficulties. 

.. note:: The 2-second threshold is backed up by research and generally accepted. However, what threshold should be used can differ depending on context and the writers themselves. When to use what threshold will not be discussed here.

Additionally, cognitive processes are not the only type of writing process you can investigate with GGXLog. Pauses can say a lot of things, but deletions are also recorded since keystroke loggers record every pressed key (including backspace and selections with the mouse). We can therefore see changes in the texts, what are called revisions, making the text's evolution over time visible.

Who should use a keystroke logger?
----------------------------------

There are many different reasons to write with a keystroke logger and, therefore, many different people that would find it useful.

**Researchers** have used keystroke logging to study different peoples writing processes for some time now.

**Teachers** can use keystroke logging to get a better view of student's writing abilities and their progress. Additionally, :ref:`I investigated <first_year_masters_thesis>` its use for teachers to gain a more nuanced perspective of their students' performances on tests.

**Clinicians** can use keystroke logging to detect writing difficulties that occur because of certain neuropsychiatric disorders. `Recent studies <https://doi.org/10.1038/s41598-022-11865-7>`_ have even shown keystroke logging to be useful to detect early stages of dementia that are difficult to diagnose with traditional diagnostic measures.

**Students** or **writers** of any type might want to know more about how they write texts themselves, what they struggle with, what they spend the most time doing when writing, how much their text evolves, or what their writing process looks like.

How to start writing
====================

Now you know what a keystroke logger is and who might want to use it and what one would use it for. In this section I will cover how to use the keystroke logging program to write a text and prepare the analysis of the writing session.

There are multiple project types, but I will only cover what is called "Free-writing". In this project type the user has access to one window where they are free to write anything they want. An example of another type of project is "Translating", where the user is presented with two windows—one with a text that is to be translated, and another with a bank page where the translated text is to be written. There are different types of projects for different uses, but Free-writing is probably the most common type of project.

Step 1: Installing the program
------------------------------

To write using GGXLog, you first need to have the program installed on your computer. The program can be downloaded at the website `ggxlog.net <https://www.ggxlog.net/>`_. Go to the "Downloads" section on the website and download the version for your operating system.

.. image:: /_static/ggxlog_downloads_2.png
   :align: center
   :class: extra-space

You will have to register to download the program by entering your name, email, country, as well as eventual university affiliation and research project. You do not have to give accurate information, you will be able to download the program immediately after registering anyway.

.. image:: /_static/ggxlog_register.png
   :align: center
   :class: extra-space

.. important:: Your antivirus software or system security might flag the software as potential malware. This is because GGXLog logs your keystrokes when you are using the program. In that case you will have to give GGXLog permission to run anyway.

.. seealso:: If you need more guidance on how to install GGXLog, you can follow the installation instructions on the `user support section <https://www.ggxlog.net/usersupport.html>`_ on the GGXlog website.

Step 2: Creating a new project
------------------------------

When you have GGXLog installed, you will have to start a new project. To do this, open the program and navigate to the top bar and press "Project", and then "New".

A window will appear with two subsections—one subsection called "Project Settings" and another subsection called "Informant Information".

.. image:: /_static/ggxlog_project.png
   :align: center
   :scale: 50%
   :class: extra-space

The project settings section includes settings for your project, such as the previously mentioned project types, the expected session length if you want a real time graph, and where you want to save your project

For a project where you write a text such as an essay, short story, or another similar text, you should select "Free-writing" as the project type. The "Session length" setting is only relevant if you want to display the real-time graph when you write. Select "Long text" unless you know that your writing session will last for less than 10 minutes. To choose where to save your project folder, press the brows button by the "File Save Location" setting.

.. image:: /_static/ggxlog_project_settings.png
   :align: center
   :scale: 75%
   :class: extra-space

.. note:: The real-time graph is not recommended for new users. The graph is difficult to understand and might be distracting.

The informant information section is for research purposes. In this section, the participant can provide general demographic information. It also contains an informed consent form for the participant.

.. image:: /_static/ggxlog_informant_information.png
   :align: center
   :scale: 75%
   :class: extra-space

When you are done setting up your project, press "Continue" at the bottom right of the window to create the project.

Step 3: Start writing
---------------------

Now you will be presented with the writing interface consisting of a few buttons—a record button, a greyed out stop and save button, and a close button—as well as the text editor where you will write your text below the buttons.

.. image:: /_static/ggxlog_session.png
   :align: center
   :class: extra-space

To begin the writing session press "Record". The text editor will unlock and turn white, which means that are able to start writing your text.

.. image:: /_static/ggxlog_record.png
   :align: center
   :scale: 75%
   :class: extra-space

When you have started the writing session and are recording, what previously was the record button will become a pause button. Pressing the pause button will pause the recording and the text editor will be locked again.

.. image:: /_static/ggxlog_pause.png
   :align: center
   :scale: 75%
   :class: extra-space

When you have finished your writing session press "Stop and Save" to stop the writing session and save your session. You will be asked to confirm your choice. When confirmed, the program will tell you where the project was saved, which will be the destination you chose when setting up the project.

.. image:: /_static/ggxlog_save.png
   :align: center
   :scale: 75%
   :class: extra-space

Now you know how to create a project and write a text using GGXLog. Next we will look at how to analyze the keystroke log.

Analyzing a writing session
=============================

When you are done with your writing session and have saved it, you need to open it in GGXLog to analyze the log. To do this, click "Project", then "Open" and navigate to where you saved your project.

Open the project folder, which probably has a name consisting of a string of numbers, then select the file called "Session_log.log" and press "Open" or double click the file.

Now you will see that a tab called "Session Replay" has opened in GGXLog. In this tab, you can watch your writing session in real time, and speed it up or down, as well as navigate through the recording.

.. image:: /_static/session_replay_80.gif
   :align: center
   :class: extra-space

The session replay feature can be useful, but does not provide deeper insights than what you can get from screen recordings of writing sessions. To analyze keystroke logging data we need to utilize the tools that GGXLog provides, or upload the logged data to statistical software.

Native analytical features
--------------------------

Further analytical features can be found within the "View" dropdown window in the top navigation bar. Here you can find several analytical tools that GGXLog supports.

.. image:: /_static/ggxlog_view.png
   :align: center
   :scale: 75%
   :class: extra-space

How to use these tools will not be covered here, but will be addressed in another guide.

Uploading logging data into statistical software
------------------------------------------------

Maybe you want to conduct an analysis that is not supported by GGXLog. In that case you can upload the log file to statistical software. One way to do this is to write a script that extracts log file data into a spreadsheet.

The following is an example of a python script that converts a log file into a csv spreadsheet:

.. code-block:: python

   import csv
   import pandas as pd

   input_file_path = r'path\to\your\log\file'  # This is your GGXLog log file
   output_file_path = r'path\to\where\you\want\to\save\your\converted\log'  # This will be the output CSV file

   # Open the TSV file and read its contents
   with open(input_file_path, 'r', newline='', encoding='utf-8') as tsv_file:
      tsv_reader = csv.reader(tsv_file, delimiter='\t')
      
      # Open the CSV file and write the contents from the TSV file
      with open(output_file_path, 'w', newline='', encoding='utf-8') as csv_file:
         csv_writer = csv.writer(csv_file, delimiter=',')
         
         for row in tsv_reader:
               csv_writer.writerow(row)

   print(f"Conversion from TSV to CSV completed. The output file is {output_file_path}.")

You can then open the spreadsheet in your preferred statistical software.